#import "./pool-tokens.graphql"

query GetPools(
  $first: Int
  $skip: Int
  $orderBy: GqlPoolOrderBy
  $orderDirection: GqlPoolOrderDirection
  $where: GqlPoolFilter
  $textSearch: String
) {
  pools: poolGetPools(
    first: $first
    skip: $skip
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    textSearch: $textSearch
  ) {
    address
    chain
    createTime
    decimals
    protocolVersion
    tags
    hasErc4626
    hasNestedErc4626
    hasAnyAllowedBuffer
    hook {
      ...Hook
    }
    poolTokens {
      id
      address
      symbol
      weight
      name
      nestedPool {
        id
        address
        symbol
        name
        tokens {
          id
          address
          symbol
          weight
          name
        }
      }
    }
    dynamicData {
      totalLiquidity
      lifetimeVolume
      lifetimeSwapFees
      volume24h
      fees24h
      holdersCount
      swapFee
      swapsCount
      totalShares
      aprItems {
        id
        title
        apr
        type
        rewardTokenSymbol
        rewardTokenAddress
      }
    }
    staking {
      id
      type
      chain
      address
      gauge {
        id
        gaugeAddress
        version
        status
        workingSupply
        otherGauges {
          gaugeAddress
          version
          status
          id
          rewards {
            id
            tokenAddress
            rewardPerSecond
          }
        }
        rewards {
          id
          rewardPerSecond
          tokenAddress
        }
      }
      aura {
        id
        apr
        auraPoolAddress
        auraPoolId
        isShutdown
      }
    }
    factory
    id
    name
    owner
    swapFeeManager
    pauseManager
    poolCreator
    symbol
    type
    userBalance {
      totalBalance
      totalBalanceUsd
      walletBalance
      walletBalanceUsd
      stakedBalances {
        balance
        balanceUsd
        stakingType
        stakingId
      }
    }
    poolTokens {
      ...PoolTokens
    }
  }
  count: poolGetPoolsCount(
    first: $first
    skip: $skip
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    textSearch: $textSearch
  )
}

# TODO: extract fragment to share common PoolCore fields between GetPools and GetFeaturedPools
query GetFeaturedPools($chains: [GqlChain!]!) {
  featuredPools: poolGetFeaturedPools(chains: $chains) {
    poolId
    primary
    description
    pool {
      address
      id
      name
      factory
      symbol
      type
      chain
      protocolVersion
      dynamicData {
        totalLiquidity
        aprItems {
          id
          title
          apr
          type
          rewardTokenSymbol
          rewardTokenAddress
        }
      }
      poolTokens {
        ...PoolTokens
      }
      hasErc4626
      hasNestedErc4626
      hasAnyAllowedBuffer
    }
  }
}
